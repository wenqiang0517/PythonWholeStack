# 面向对象
    # 类 对象/实例 实例化
    # 类是具有相同属性和相似功能的一类事物
        # 一个模子\大的范围\抽象
        # *****************
        # 你可以清楚的知道这一类事物有什么属性,有什么动作
        # 但是你不能知道这些属性具体的值
    # 对象===实例
        # 给类中所有的属性填上具体的值就是一个对象或者实例
        # 只有一个类,但是可以有多个对象都是这个类的对象
    # 实例化
        # 实例 = 类名()
        # 首先开辟空间,调用init方法,把开辟的空间地址传递给self参数
        # init方法中一般完成 : 把属性的值存储在self的空间里 - 对象的初始化
        # self这个地址会作为返回值,返回给"实例"
    # 方法 : 定义在类里的函数,并且还带有self参数
    # 实例变量 : self.名字



# 类 : 这个类有什么属性 用什么方法 大致的样子
#      不能知道具体的属性对应的值
# 对象 :之前所有的属性值就都明确了
# 类型 :int float str dict list tuple set -- 类（内置的数据类型，内置的类）
# 变量名 = xx数据类型对象
# a = 10
# b = 12.5
# l = [1,2,3]
# d = {'k':'v'}
# o = 函数
# q = 迭代器
# u = 生成器
# i = 类名

# python中一切皆对象,对象的类型就是类

# 所有的对象都有一个类型,class A实例化出来的对象的类型就是A类
# 123的类型是int/float
# 'ajksfk'的类型是str
# {}的类型是dict
# alex = Person()的类型是Person
# 小白 = Dog()的类型是Dog

# def abc():pass
# print(type(abc))

